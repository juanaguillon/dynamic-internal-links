var Sets = function (a) { this.$el = jQuery(a), this.defaults = { clicking: !1, start: 0, cloneObject: null, elemLength: jQuery(a).length, previus: !1, nextius: !1, test: 'first' }; var b = this, c = b.defaults, d = 0, f = !1; this.mouseMove = function (h = 'prev') { this.$el.mousedown(function () { if (!(2 > c.elemLength)) { b.defaults.clicking = !0; var i = jQuery(this); !(0 < i.prev().length) || (c.previus = !0), !(0 < i.next().length) || (c.nextius = !0), 'prev' == h && c.previus ? b.defaults.start = jQuery(this).prev().position().top : 'next' == h && c.nextius && (b.defaults.start = jQuery(this).next().position().top); b.defaults.cloneObject = jQuery(this).clone() } }), jQuery(document).mouseup(function () { c.clicking = !1; var i = b.defaults.clicking }), this.$el.mousemove(function (i) { if (!b.defaults.clicking) return !1; var j = b.defaults.cloneObject; j.css({ position: 'absolute', left: i.pageX - jQuery('#wpbody').offset().left - j.width() / 2, top: i.pageY - jQuery('#wpbody').offset().top - j.height() / 2 }).addClass('bd_clone').prop('disabled', !0), jQuery(this).after(j), console.log(this); var l = i.pageY - jQuery('#wpbody').offset().top, m = b.defaults.start, n = 'prev' == h ? jQuery(this).prev() : jQuery(this).next(); m >= l && c.previus && (c.start = n.position().top, console.log('box Changed')), console.log('|ePage| => ' + l + ' and |Starting| => ' + m) }) }, this.createAttrs = function (h) { var i = ''; for (var j in h) h.hasOwnProperty(j) && (i += ' ' + j + '="' + h[j] + '"'); return i }, this.createInput = function (h) { var i = '<input'; return i += this.createAttrs(h), i += ' >', i }, this.createElement = function (h, i) { i.elem = i.elem || 'div'; var j = '<' + i.elem; return j += this.createAttrs(i), j += ' >' + h + '</' + i.elem + '>', j }, this.move_text = function (h, i) { var j = jQuery(h), l = { dir: 'after', parent: j.parent() }; if (j.after(this.createElement(i, { elem: 'span', 'class': 'val_priority dyn_chance' })), j.after(this.createInput({ type: 'hidden', name: 'priority_vals[]', value: i })), 1 == this.$el.children('.val_priority').length) l.parent.prependTo(jQuery('.dynil_setter_pages')); else { var m = this.$el = jQuery('.dyn_page_bd'), n = m.children('.val_priority'); n.each(function () { l.th = jQuery(this), l.th_int = parseInt(l.th.text()), l.th_parent = l.th.parent(); var o = { next: l.th_parent.next(), prev: l.th_parent.prev() }; o.next_children = o.next.children('.val_priority'), o.prev_children = o.prev.children('.val_priority'), 0 < o.next_children.length ? i >= l.th_int && parseInt(o.next_children.text()) >= i ? (f = l.th_parent, d = parseInt(f.children('.val_priority').text())) : i <= l.th_int && (0 == parseInt(o.prev.length) || parseInt(o.prev_children.text() >= i)) && (f = l.th_parent, d = parseInt(f.children('.val_priority').text()), l.dir = 'before') : i > l.th_int && (f = l.th_parent, d = parseInt(f.children('.val_priority').text())) }) } 'after' == l.dir ? j.parent().insertAfter(f) : 'before' == l.dir && j.parent().insertBefore(f), j.remove() }, this.changeValue1 = function (h) { var i = $(h); this.TEtext = i.html(), i.after('<input type="text" class="dyn_input_change" value="' + this.TEtext + '">'), i.remove() }, this.changeValue2 = function () { } };